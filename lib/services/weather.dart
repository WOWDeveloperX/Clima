import 'package:clima_x/services/location.dart';
import 'package:clima_x/services/networking.dart';

const apiKey = '0b1568b066afb5101600ea8e8c60e424';

const openWeatherMapURL = 'https://api.openweathermap.org/data/2.5/weather';

class WeatherModel {
  Future<dynamic> getCityWeather(String cityName) async {
    var url = '$openWeatherMapURL?q=$cityName&appid=$apiKey&units=metric';
    NetworkHelper networkHelper =
        NetworkHelper(url); //—Å–ø–æ—Å–æ–± –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ 2 —Å—Ç—Ä–æ–∫–∏

    var weatherData = await networkHelper.getData();

    return weatherData;
  }

  Future<dynamic> getLocationWeather() async {
    Location location = Location();
    await location.getCurrentLocation();

    // latitude = location.latitude;   —Å–¥–µ–ª–∞–ª –ø–µ—Ä–µ–Ω–æ—Å —Å—Ä–∞–∑—É –≤  url –∑–Ω–∞—á–µ–Ω–∏–µ!
    // longitude = location.longitude;

    NetworkHelper networkHelper = NetworkHelper(
        '$openWeatherMapURL?lat=${location.latitude}&lon=${location.longitude}&appid=$apiKey&units=metric');

    var weatherData = await networkHelper.getData();

    return weatherData;
  }

  String getWeatherIcon(int condition) {
    if (condition < 300) {
      return 'üå©';
    } else if (condition < 400) {
      return 'üåß';
    } else if (condition < 600) {
      return '‚òîÔ∏è';
    } else if (condition < 700) {
      return '‚òÉ';
    } else if (condition < 800) {
      return 'üå´';
    } else if (condition == 800) {
      return 'üîÜ';
    } else if (condition <= 804) {
      return '‚òÅÔ∏è';
    } else {
      return 'ü§∑';
    }
  }

  String getMessage(int temp) {
    if (temp > 25) {
      return '–í—Ä–µ–º—è –¥–ª—èüç¶';
    } else if (temp > 20) {
      return '–≤—Ä–µ–º—è –¥–ª—è —à–æ—Ä—Ç –∏ üëï';
    } else if (temp < 10) {
      return '–û–¥–µ–≤–∞—Ç—å üß£ –∏ üß§';
    } else {
      return '–ü—Ä–∏—Ö–≤–∞—Ç–∏ üß•';
    }
  }
}
